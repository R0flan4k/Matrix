[1mdiff --git a/Matrix/include/matrix.h b/Matrix/include/matrix.h[m
[1mindex ab53250..40a506e 100644[m
[1m--- a/Matrix/include/matrix.h[m
[1m+++ b/Matrix/include/matrix.h[m
[36m@@ -59,7 +59,7 @@[m [mprotected:[m
                            : static_cast<T *>(::operator new(sizeof(T) * sz_)))[m
     {}[m
 [m
[31m-    explicit matrix_buff(const matrix_buff &m) : matrix_buff(m.sz_)[m
[32m+[m[32m    matrix_buff(const matrix_buff &m) : matrix_buff(m.sz_)[m
     {[m
         assert(m.used_ == m.sz_);[m
         for (std::size_t i = 0; i < sz_; ++i)[m
[36m@@ -147,13 +147,12 @@[m [mpublic:[m
         assert(used_ == sz_);[m
     }[m
 [m
[31m-    template <std::random_access_iterator RandIt>[m
[31m-    explicit matrix_t(RandIt start, RandIt fin)[m
[32m+[m[32m    template <std::forward_iterator RandIt>[m
[32m+[m[32m    matrix_t(RandIt start, RandIt fin)[m
         : matrix_buff<T>(std::distance(start, fin)),[m
           n_(std::sqrt(std::distance(start, fin)))[m
     {[m
[31m-        for (std::size_t i = 0, dist = std::distance(start, fin); i < dist;[m
[31m-             ++i, ++start)[m
[32m+[m[32m        for (std::size_t i = 0; start != fin; ++i, ++start)[m
         {[m
             this->construct(data_ + i, *start);[m
             ++used_;[m
[36m@@ -211,7 +210,7 @@[m [mpublic:[m
             *access(lhs, i) -= *access(rhs, i) * val;[m
     }[m
 [m
[31m-    template <std::random_access_iterator RandomIt>[m
[32m+[m[32m    template <std::forward_iterator RandomIt>[m
     void set_col(std::size_t col_id, RandomIt start, RandomIt fin) noexcept[m
     {[m
         for (std::size_t i = 0; i < n_; ++i, ++start)[m
[36m@@ -319,8 +318,8 @@[m [mpublic:[m
 [m
     const_matrix_t(const std::initializer_list<T> &inpt) : matrix_t<T>(inpt) {}[m
 [m
[31m-    template <std::random_access_iterator RandIt>[m
[31m-    explicit const_matrix_t(RandIt start, RandIt fin) : matrix_t<T>(start, fin)[m
[32m+[m[32m    template <std::forward_iterator RandIt>[m
[32m+[m[32m    const_matrix_t(RandIt start, RandIt fin) : matrix_t<T>(start, fin)[m
     {}[m
 [m
     const_matrix_t(const matrix_t<T> &matr) : matrix_t<T>(matr) {}[m
